version: '3.4'

services:
  # --------------------------
  # Banco de dados kong
  # --------------------------  
  kong-database:
    image: postgres:9.6
    container_name: kong-database
    environment:
      - POSTGRES_USER=${KONG_USER}
      - POSTGRES_DB=kong
      - POSTGRES_PASSWORD=${KONG_PWD}
    volumes:
      - "db-data-kong-postgres:/var/lib/postgresql/data"
    networks:
      - kong-net
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 2048M  
  

  # --------------------------
  # Kong migrations
  # --------------------------  
  kong-migrations:
    image: kong
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_PASSWORD=${KONG_PWD}
      - KONG_CASSANDRA_CONTACT_POINTS=kong-database
    command: kong migrations bootstrap
    restart: on-failure
    depends_on:
      - kong-database
    networks:
      - kong-net

  # --------------------------
  # Api kong
  # --------------------------  
  kong:
    image: kong
    container_name: kong
    environment:
      - LC_CTYPE=en_US.UTF-8
      - LC_ALL=en_US.UTF-8
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_USER=${KONG_USER}
      - KONG_PG_PASSWORD=${KONG_PWD}
      - KONG_CASSANDRA_CONTACT_POINTS=kong-database
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
    restart: on-failure
    ports:
      - 8000:8000
      - 8443:8443
      - 8001:8001
      - 8444:8444
    links:
      - kong-database:kong-database
    depends_on:
      - kong-migrations
    networks:
      - kong-net  
    deploy:
      resources:
        limits:
          cpus: '.80'
          memory: 2048M  
  
  # --------------------------
  # konga
  # --------------------------  
  konga:
    image: pantsel/konga
    ports:
      - 1337:1337
    links:
      - kong:kong
    container_name: konga
    environment:
      - NODE_ENV=production
    networks:
      - kong-net  
    deploy:
      resources:
        limits:
          cpus: ".65"
          memory: 512M        
       
  # --------------------------
  # Serviço de estoque
  # --------------------------  
  icarusestoque:
    container_name: container-estoque
    image: k4im/estoque:${ICARUS_VER}
    networks:
      - kong-net
    deploy:
      resources:
        limits:
          cpus: ".50"
          memory: 1024M        

  # --------------------------
  # Serviço de projetos
  # --------------------------  
  icarusprojetos:
    container_name: container-projetos
    image: k4im/projeto:${ICARUS_VER}
    networks:
      - kong-net
    deploy:
      resources:
        limits:
          cpus: ".50"
          memory: 1024M        

  # --------------------------
  # Servidor de bus
  # --------------------------  
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: container-broker
    environment:
    - RABBITMQ_DEFAULT_USER=${RABBIT_USER}
    - RABBITMQ_DEFAULT_PASS=${RABBIT_PWD}
    hostname: broker
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
      - db-broker:/var/lib/rabbitmq
    networks:
      - kong-net
    deploy:
      resources:
        limits:
          memory: 256M   

  # --------------------------
  # Serviço de auth
  # --------------------------  
  icarusjwt:
    image: k4im/autenticacao:${ICARUS_VER}
    container_name: container-auth
    networks:
      - kong-net
    deploy:
      resources:
        limits:
          cpus: ".60"
          memory: 1024M        


  # --------------------------
  # container swagger
  # --------------------------  
  swagger-ui:
    image: swaggerapi/swagger-ui
    container_name: "container-swagger"
    ports:
      - "8085:8080"
    environment:
      URL: ${SWAGGER_JSON}

    deploy:
      resources:
        limits:
          cpus: ".50"
          memory: 512M  

volumes:
  db-services:
  db-data-kong-postgres:
  db-broker:

networks:
    kong-net:
        external: true
